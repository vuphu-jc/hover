apply plugin: 'com.android.library'
apply plugin: 'checkstyle'

version = '0.9.8'

android {
    compileSdkVersion project.compileSdkVersion.toInteger()
    buildToolsVersion project.buildToolsVersion

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion project.targetSdkVersion.toInteger()
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile "com.android.support:appcompat-v7:${supportLibVersion}"
    compile "com.android.support:recyclerview-v7:${supportLibVersion}" // Used to get DiffUtil
    compile 'com.android.support.constraint:constraint-layout:1.1.2'

    testCompile 'junit:junit:4.12'
}

// For Bintray publishing
ext {
    bintrayRepo = 'maven'
    bintrayName = 'hover'

    publishedGroupId = 'io.mattcarroll.hover'
    artifact = 'hover'
    libraryName = 'Hover'

    libraryDescription = 'An Android implementation of a floating menu.'

    siteUrl = 'http://google.github.io/hover/'
    gitUrl = 'https://github.com/google/hover.git'

    libraryVersion = version

    developerId = 'matthew-carroll'
    developerName = 'Matt Carroll'
    developerEmail = 'me@mattcarroll.io'

    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ["Apache-2.0"]
}

apply from: 'https://raw.githubusercontent.com/nuuneoi/JCenter/master/installv1.gradle'
apply from: 'https://raw.githubusercontent.com/nuuneoi/JCenter/master/bintrayv1.gradle'

// The following is used to add our dependencies to the classpath for Javadoc linking.
afterEvaluate {
    javadoc.classpath += files(android.libraryVariants.collect { variant ->
        variant.javaCompile.classpath.files
    })
}

// This disabled Javadoc tasks because its breaking the release build.  Since Javadocs are
// not mission critical, they will remain disabled until the issue can be debugged.
tasks.withType(Javadoc).all { enabled = false }

//------ Checkstyle -------
task checkstyle(type: Checkstyle) {
    showViolations = true
    configFile file("../config/checkstyle.xml")

    source 'src/main/java'
    include '**/*.java'
    exclude '**/gen/**'
    exclude '**/R.java'
    exclude '**/BuildConfig.java'

    // empty classpath
    classpath = files()
}

project.afterEvaluate {
    preBuild.dependsOn('checkstyle')
    assemble.dependsOn('lint')
    check.dependsOn('checkstyle')
}